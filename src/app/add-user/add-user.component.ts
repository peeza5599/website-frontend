import { Component } from '@angular/core';
import { Router } from '@angular/router';
import { UsermanagementService } from '../usermanagement.service';

@Component({
  selector: 'app-add-user',
  templateUrl: './add-user.component.html',
  styleUrls: ['./add-user.component.css']
})
export class AddUserComponent {
  profileImage: File | null = null;
  faceImages: File[] = [];

  formData: any = {
    name: '',
    role: '',
    studyClass: '', // ‚úÖ ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    total_attendance: '0',
    standing: '',
    last_attendance_time: new Date().toISOString().slice(0, 19).replace('T', ' '),
  };

  constructor(private userService: UsermanagementService, private router: Router) {}

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
  onFileSelected(event: any): void {
    const file = event.target.files[0];
    if (file) {
      this.profileImage = file;
    }
  }

  validateEnglishInput(event: KeyboardEvent): void {
    const char = event.key;
    const pattern = /^[A-Za-z ]+$/;
    if (!pattern.test(char)) {
      event.preventDefault();
    }
  }

  updateFormFields(): void {
    if (this.formData.role === 'student' || this.formData.role === 'teacher') {
      this.formData.standing = 'Com-Tech';
      this.formData.studyClass = 'Database'; // ‚úÖ ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    } else {
      this.formData.standing = '-';
      this.formData.studyClass = '-'; // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô "-" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö visitor
    }
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤ (‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ)
  onFaceImagesSelected(event: any): void {
    const files: File[] = Array.from(event.target.files);
    this.faceImages = [];

    files.forEach((file: File) => {
      if (file.type.startsWith('image/')) {
        this.faceImages.push(file);
      } else {
        alert(`‚ùå ‡πÑ‡∏ü‡∏•‡πå ${file.name} ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û`);
      }
    });
  }

  // ‚úÖ üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ API
  onSubmit(): void {
    if (!this.formData.name) {
      alert('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö');
      return;
    }

    const formData = new FormData();
    Object.keys(this.formData).forEach(key => {
      formData.append(key, this.formData[key]);
    });

    if (this.profileImage) {
      formData.append('image', this.profileImage);
    }

    // ‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á API `add-user`
    this.userService.addUser(formData).subscribe({
      next: (response) => {
        alert(`‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! \n‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${response.last_attendance_time}`);

        // ‚úÖ ‡πÉ‡∏ä‡πâ user_id ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å API
        const user_id = response.user_id;

        // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
        if (this.faceImages.length > 0) {
          this.uploadFaceImages(user_id);
        } else {
          this.router.navigate(['/history']); // ‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤ ‚Üí ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        }
      },
      error: (err) => {
        console.error('‚ùå Error adding user:', err);
        alert('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ');
      }
    });
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤ ‡∏û‡∏£‡πâ‡∏≠‡∏° `user_id`
  uploadFaceImages(user_id: string): void {
    const faceFormData = new FormData();
    faceFormData.append('user_id', user_id); // ‚úÖ ‡∏™‡πà‡∏á user_id ‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
    this.faceImages.forEach(file => {
      faceFormData.append('faceImages', file);
    });

    this.userService.uploadFaceImages(user_id, this.faceImages).subscribe({
      next: () => {
        alert(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏î‡∏à‡∏≥‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!`);
        this.router.navigate(['/history']);
      },
      error: (err) => {
        console.error('‚ùå Error uploading face images:', err);
        alert('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤');
      }
    });
  }

  // üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
  cancel(): void {
    this.router.navigate(['/']);
  }
}
